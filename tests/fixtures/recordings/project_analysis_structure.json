[
  {
    "scope": "http://localhost:11434",
    "method": "POST",
    "path": "/api/chat",
    "body": {
      "model": "llama3.1:8b",
      "messages": [
        {
          "role": "system",
          "content": "You are QCode, a helpful AI coding assistant with access to tools.\n\nAvailable tools:\n- internal.files: Read files, list directories, search within files\n- internal.project: Analyze project structure, technologies, frameworks, and architecture\n\nInstructions:\n1. Use tools to gather the information needed to answer the user's question\n2. After getting tool results, provide a clear, direct answer to what was asked\n3. If you need more information, call additional tools\n4. When you have enough information, provide your final answer\n\nBe specific and focused in your answers. If asked about technologies, list them clearly. If asked about files, show the relevant content."
        },
        {
          "role": "user",
          "content": "analyze the structure of this project"
        }
      ],
      "stream": false,
      "format": "json",
      "options": {
        "temperature": 0.1
      },
      "tools": [
        {
          "type": "function",
          "function": {
            "name": "internal:files",
            "description": "Perform file operations including read, write, list, and search files within the workspace",
            "parameters": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write",
                    "list",
                    "search"
                  ],
                  "description": "The type of file operation to perform"
                },
                "path": {
                  "type": "string",
                  "description": "For read/write: file path. For list: directory path to search in (default: current directory)"
                },
                "content": {
                  "type": "string",
                  "description": "Content to write (for write operation)"
                },
                "query": {
                  "type": "string",
                  "description": "Search query text or pattern (for search operation)"
                },
                "pattern": {
                  "type": "string",
                  "description": "Glob pattern to filter files (e.g., \"**/*.ts\", \"*.swift\"). Use this to find files by extension or name pattern."
                },
                "startLine": {
                  "type": "number",
                  "description": "Starting line number for partial file read (1-indexed)"
                },
                "endLine": {
                  "type": "number",
                  "description": "Ending line number for partial file read (1-indexed, inclusive)"
                },
                "recursive": {
                  "type": "boolean",
                  "description": "Whether to search/list recursively in subdirectories",
                  "default": false
                },
                "includeHidden": {
                  "type": "boolean",
                  "description": "Whether to include hidden files (starting with .)",
                  "default": false
                },
                "includeMetadata": {
                  "type": "boolean",
                  "description": "Whether to include file metadata (size, dates, permissions)",
                  "default": false
                },
                "useRegex": {
                  "type": "boolean",
                  "description": "Whether to treat search query as a regular expression",
                  "default": false
                },
                "caseSensitive": {
                  "type": "boolean",
                  "description": "Whether search should be case sensitive",
                  "default": false
                },
                "backup": {
                  "type": "boolean",
                  "description": "Whether to create backup before overwriting files",
                  "default": true
                },
                "createDirs": {
                  "type": "boolean",
                  "description": "Whether to create parent directories if they don't exist",
                  "default": true
                },
                "encoding": {
                  "type": "string",
                  "enum": [
                    "utf8",
                    "utf-8",
                    "ascii",
                    "base64",
                    "hex"
                  ],
                  "description": "File encoding for read/write operations",
                  "default": "utf8"
                },
                "maxResults": {
                  "type": "number",
                  "description": "Maximum number of search results to return",
                  "default": 100
                },
                "includeContext": {
                  "type": "boolean",
                  "description": "Whether to include context lines around search matches",
                  "default": true
                }
              },
              "required": [
                "operation"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "internal:project",
            "description": "Analyze and understand project structure, architecture, patterns, and conventions to provide intelligent, context-aware coding assistance",
            "parameters": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "enum": [
                    "analyze",
                    "understand",
                    "summarize"
                  ],
                  "description": "The type of project intelligence operation to perform"
                },
                "scope": {
                  "type": "string",
                  "enum": [
                    "full",
                    "structure",
                    "dependencies",
                    "architecture",
                    "patterns"
                  ],
                  "description": "Scope of analysis: full project, structure only, dependencies, architecture patterns, or code patterns",
                  "default": "full"
                },
                "depth": {
                  "type": "string",
                  "enum": [
                    "basic",
                    "detailed",
                    "comprehensive"
                  ],
                  "description": "Depth of analysis: basic overview, detailed analysis, or comprehensive deep-dive",
                  "default": "detailed"
                },
                "focus": {
                  "type": "string",
                  "enum": [
                    "technologies",
                    "frameworks",
                    "conventions",
                    "architecture",
                    "domain",
                    "patterns",
                    "structure"
                  ],
                  "description": "Specific focus area for understanding: technologies used, frameworks, naming conventions, architecture patterns, business domain, code patterns, or file structure"
                },
                "target": {
                  "type": "string",
                  "description": "Specific file, directory, or component to understand (e.g., \"src/auth\", \"components/Header.tsx\")"
                },
                "context": {
                  "type": "string",
                  "description": "Additional context about what to understand or why (e.g., \"preparing to add authentication\", \"refactoring for better performance\")"
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "brief",
                    "detailed",
                    "technical",
                    "executive"
                  ],
                  "description": "Format of summary: brief overview, detailed analysis, technical deep-dive, or executive summary",
                  "default": "detailed"
                },
                "audience": {
                  "type": "string",
                  "enum": [
                    "developer",
                    "manager",
                    "team",
                    "stakeholder"
                  ],
                  "description": "Target audience for the summary to adjust language and focus appropriately",
                  "default": "developer"
                },
                "includeCode": {
                  "type": "boolean",
                  "description": "Whether to include code samples and patterns in the analysis",
                  "default": true
                },
                "includeConfigs": {
                  "type": "boolean",
                  "description": "Whether to include configuration files in the analysis",
                  "default": true
                },
                "includeDocs": {
                  "type": "boolean",
                  "description": "Whether to include documentation files in the analysis",
                  "default": true
                },
                "includeMetrics": {
                  "type": "boolean",
                  "description": "Whether to include quantitative metrics in the summary",
                  "default": false
                },
                "includeRecommendations": {
                  "type": "boolean",
                  "description": "Whether to include actionable recommendations",
                  "default": true
                }
              },
              "required": [
                "operation"
              ],
              "additionalProperties": false
            }
          }
        }
      ]
    },
    "status": 200,
    "response": {
      "model": "llama3.1:8b",
      "created_at": "2025-06-06T04:54:16.021564Z",
      "message": {
        "role": "assistant",
        "content": "",
        "tool_calls": [
          {
            "function": {
              "name": "internal:project",
              "arguments": {
                "depth": "detailed",
                "format": "technical",
                "operation": "analyze",
                "scope": "full"
              }
            }
          }
        ]
      },
      "done_reason": "stop",
      "done": true,
      "total_duration": 6559968709,
      "load_duration": 3222147542,
      "prompt_eval_count": 1116,
      "prompt_eval_duration": 2485284291,
      "eval_count": 37,
      "eval_duration": 835935667
    },
    "rawHeaders": {
      "content-length": "446",
      "content-type": "application/json; charset=utf-8",
      "date": "Fri, 06 Jun 2025 04:54:16 GMT"
    },
    "responseIsBinary": false
  },
  {
    "scope": "http://localhost:11434",
    "method": "POST",
    "path": "/api/generate",
    "body": {
      "model": "llama3.1:8b",
      "prompt": "Analyze this project and identify its technologies, frameworks, and programming languages.\n\nPROJECT STRUCTURE:\n- Directories: src\n- Config files: package.json\n- Source files: user.ts\n\nCONFIGURATION FILE CONTENTS:\n--- package.json ---\n{\n  \"name\": \"test-project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Test project for QCode e2e testing\",\n  \"scripts\": {\n    \"test\": \"echo \\\"test script\\\"\",\n    \"build\": \"echo \\\"build script\\\"\"\n  },\n  \"dependencies\": {\n    \"typescript\": \"^5.0.0\",\n    \"jest\": \"^29.0.0\"\n  }\n}\n\n\nAnalyze this project and respond with a JSON object in this exact format:\n{\n  \"primaryLanguage\": \"the main programming language\",\n  \"languages\": [\"array\", \"of\", \"programming\", \"languages\"],\n  \"frameworks\": [\"array\", \"of\", \"frameworks\", \"and\", \"libraries\"], \n  \"technologies\": [\"array\", \"of\", \"tools\", \"and\", \"technologies\"]\n}\n\nBe comprehensive but accurate. For Swift projects, include Swift Package Manager, SwiftLint, etc. For Node.js, include npm/yarn, testing frameworks, etc. Only include what you can actually detect from the files.",
      "stream": false,
      "options": {
        "temperature": 0.1
      }
    },
    "status": 200,
    "response": {
      "model": "llama3.1:8b",
      "created_at": "2025-06-06T04:54:22.871454Z",
      "response": "Here is the analysis of the project:\n\n```\n{\n  \"primaryLanguage\": \"TypeScript\",\n  \"languages\": [\"TypeScript\"],\n  \"frameworks\": [\"Jest\", \"TypeScript (as a superset of JavaScript)\"],\n  \"technologies\": [\"npm\", \"Webpack (not explicitly mentioned, but implied by TypeScript and Jest dependencies)\", \"ESLint (not explicitly mentioned, but implied by TypeScript dependency)\"]\n}\n```\n\nHere's the reasoning behind this analysis:\n\n* The primary language is TypeScript because it's the only programming language explicitly mentioned in the `package.json` file.\n* The languages array includes only TypeScript since there are no other explicit mentions of programming languages.\n* Jest is a testing framework, and its presence in the dependencies suggests that it's being used for testing purposes. TypeScript is also included as a superset of JavaScript, which implies that it's being used to write code that can be compiled to JavaScript.\n* npm is mentioned explicitly in the `package.json` file, so it's included in the technologies array. Webpack is not explicitly mentioned, but its presence is implied by the fact that TypeScript and Jest are being used. ESLint is also not explicitly mentioned, but its presence is implied by the fact that TypeScript is being used (ESLint is often used with TypeScript to enforce coding standards).",
      "done": true,
      "done_reason": "stop",
      "context": [
        128006,
        882,
        128007,
        271,
        2127,
        56956,
        420,
        2447,
        323,
        10765,
        1202,
        14645,
        11,
        49125,
        11,
        323,
        15840,
        15823,
        382,
        42555,
        60678,
        4622,
        512,
        12,
        7286,
        2490,
        25,
        2338,
        198,
        12,
        5649,
        3626,
        25,
        6462,
        4421,
        198,
        12,
        8922,
        3626,
        25,
        1217,
        21991,
        271,
        25677,
        29428,
        12100,
        36868,
        50,
        512,
        4521,
        6462,
        4421,
        55023,
        517,
        220,
        330,
        609,
        794,
        330,
        1985,
        34796,
        761,
        220,
        330,
        4464,
        794,
        330,
        16,
        13,
        15,
        13,
        15,
        761,
        220,
        330,
        4789,
        794,
        330,
        2323,
        2447,
        369,
        1229,
        2123,
        384,
        17,
        68,
        7649,
        761,
        220,
        330,
        20420,
        794,
        341,
        262,
        330,
        1985,
        794,
        330,
        3123,
        7393,
        1985,
        5429,
        97001,
        262,
        330,
        5957,
        794,
        330,
        3123,
        7393,
        5957,
        5429,
        2153,
        702,
        220,
        1173,
        220,
        330,
        55374,
        794,
        341,
        262,
        330,
        50652,
        794,
        41015,
        20,
        13,
        15,
        13,
        15,
        761,
        262,
        330,
        50115,
        794,
        41015,
        1682,
        13,
        15,
        13,
        15,
        702,
        220,
        457,
        3818,
        2127,
        56956,
        420,
        2447,
        323,
        6013,
        449,
        264,
        4823,
        1665,
        304,
        420,
        4839,
        3645,
        512,
        517,
        220,
        330,
        6682,
        14126,
        794,
        330,
        1820,
        1925,
        15840,
        4221,
        761,
        220,
        330,
        43924,
        794,
        4482,
        1686,
        498,
        330,
        1073,
        498,
        330,
        92726,
        498,
        330,
        43924,
        8257,
        220,
        330,
        3879,
        82,
        794,
        4482,
        1686,
        498,
        330,
        1073,
        498,
        330,
        3879,
        82,
        498,
        330,
        438,
        498,
        330,
        64149,
        8073,
        720,
        220,
        330,
        26522,
        9268,
        794,
        4482,
        1686,
        498,
        330,
        1073,
        498,
        330,
        16297,
        498,
        330,
        438,
        498,
        330,
        26522,
        9268,
        7171,
        633,
        3513,
        16195,
        719,
        13687,
        13,
        1789,
        24594,
        7224,
        11,
        2997,
        24594,
        17333,
        10790,
        11,
        24594,
        48656,
        11,
        5099,
        13,
        1789,
        6146,
        2927,
        11,
        2997,
        47522,
        27589,
        1923,
        11,
        7649,
        49125,
        11,
        5099,
        13,
        8442,
        2997,
        1148,
        499,
        649,
        3604,
        11388,
        505,
        279,
        3626,
        13,
        128009,
        128006,
        78191,
        128007,
        271,
        8586,
        374,
        279,
        6492,
        315,
        279,
        2447,
        1473,
        14196,
        4077,
        517,
        220,
        330,
        6682,
        14126,
        794,
        330,
        941,
        6035,
        761,
        220,
        330,
        43924,
        794,
        4482,
        941,
        6035,
        8257,
        220,
        330,
        3879,
        82,
        794,
        4482,
        41,
        478,
        498,
        330,
        941,
        6035,
        320,
        300,
        264,
        1043,
        45246,
        315,
        13210,
        8,
        8257,
        220,
        330,
        26522,
        9268,
        794,
        4482,
        41139,
        498,
        330,
        54214,
        320,
        1962,
        21650,
        9932,
        11,
        719,
        6259,
        555,
        88557,
        323,
        94569,
        20113,
        11844,
        330,
        1600,
        48656,
        320,
        1962,
        21650,
        9932,
        11,
        719,
        6259,
        555,
        88557,
        24999,
        8,
        7171,
        534,
        14196,
        19884,
        8586,
        596,
        279,
        33811,
        4920,
        420,
        6492,
        1473,
        9,
        578,
        6156,
        4221,
        374,
        88557,
        1606,
        433,
        596,
        279,
        1193,
        15840,
        4221,
        21650,
        9932,
        304,
        279,
        1595,
        1757,
        4421,
        63,
        1052,
        627,
        9,
        578,
        15823,
        1358,
        5764,
        1193,
        88557,
        2533,
        1070,
        527,
        912,
        1023,
        11720,
        34945,
        315,
        15840,
        15823,
        627,
        9,
        94569,
        374,
        264,
        7649,
        12914,
        11,
        323,
        1202,
        9546,
        304,
        279,
        20113,
        13533,
        430,
        433,
        596,
        1694,
        1511,
        369,
        7649,
        10096,
        13,
        88557,
        374,
        1101,
        5343,
        439,
        264,
        1043,
        45246,
        315,
        13210,
        11,
        902,
        24897,
        430,
        433,
        596,
        1694,
        1511,
        311,
        3350,
        2082,
        430,
        649,
        387,
        20276,
        311,
        13210,
        627,
        9,
        47522,
        374,
        9932,
        21650,
        304,
        279,
        1595,
        1757,
        4421,
        63,
        1052,
        11,
        779,
        433,
        596,
        5343,
        304,
        279,
        14645,
        1358,
        13,
        5000,
        4853,
        374,
        539,
        21650,
        9932,
        11,
        719,
        1202,
        9546,
        374,
        6259,
        555,
        279,
        2144,
        430,
        88557,
        323,
        94569,
        527,
        1694,
        1511,
        13,
        69422,
        396,
        374,
        1101,
        539,
        21650,
        9932,
        11,
        719,
        1202,
        9546,
        374,
        6259,
        555,
        279,
        2144,
        430,
        88557,
        374,
        1694,
        1511,
        320,
        1600,
        48656,
        374,
        3629,
        1511,
        449,
        88557,
        311,
        29262,
        11058,
        10886,
        570
      ],
      "total_duration": 6815844916,
      "load_duration": 13365625,
      "prompt_eval_count": 283,
      "prompt_eval_duration": 604911375,
      "eval_count": 270,
      "eval_duration": 6197189334
    },
    "rawHeaders": {
      "content-type": "application/json; charset=utf-8",
      "date": "Fri, 06 Jun 2025 04:54:22 GMT",
      "transfer-encoding": "chunked"
    },
    "responseIsBinary": false
  },
  {
    "scope": "http://localhost:11434",
    "method": "POST",
    "path": "/api/chat",
    "body": {
      "model": "llama3.1:8b",
      "messages": [
        {
          "role": "system",
          "content": "You are QCode, a helpful AI coding assistant with access to tools.\n\nAvailable tools:\n- internal.files: Read files, list directories, search within files\n- internal.project: Analyze project structure, technologies, frameworks, and architecture\n\nInstructions:\n1. Use tools to gather the information needed to answer the user's question\n2. After getting tool results, provide a clear, direct answer to what was asked\n3. If you need more information, call additional tools\n4. When you have enough information, provide your final answer\n\nBe specific and focused in your answers. If asked about technologies, list them clearly. If asked about files, show the relevant content."
        },
        {
          "role": "user",
          "content": "analyze the structure of this project"
        },
        {
          "role": "assistant",
          "content": "[{\"name\":\"internal:project\",\"args\":{\"depth\":\"detailed\",\"format\":\"technical\",\"operation\":\"analyze\",\"scope\":\"full\"}}]"
        },
        {
          "role": "user",
          "content": "Tool results:\n\nTool: internal:project\nResult: Project Analysis:\n- Name: test-project\n- Type: Node.js Application\n- Primary Language: TypeScript\n- Languages: TypeScript\n- Frameworks: Jest, TypeScript (as a superset of JavaScript)\n- Technologies: npm, Webpack (not explicitly mentioned, but implied by TypeScript and Jest dependencies), ESLint (not explicitly mentioned, but implied by TypeScript dependency)\n"
        },
        {
          "role": "user",
          "content": "Based on the tool results above, please provide a direct and complete answer to the original question: \"analyze the structure of this project\"\n\nDo not call any more tools. Just analyze the information you've gathered and give a clear, comprehensive answer."
        }
      ],
      "stream": false,
      "format": "json",
      "options": {
        "temperature": 0.1
      },
      "tools": []
    },
    "status": 200,
    "response": {
      "model": "llama3.1:8b",
      "created_at": "2025-06-06T04:54:25.802613Z",
      "message": {
        "role": "assistant",
        "content": "{ \n  \"Project Structure\": {\n    \"Name\": \"test-project\",\n    \"Type\": \"Node.js Application\",\n    \"Primary Language\": \"TypeScript\",\n    \"Languages\": [\"TypeScript\"],\n    \"Frameworks\": [\"Jest\", \"Webpack (implied)\"],\n    \"Technologies\": [\"npm\", \"ESLint (implied)\", \"Webpack (implied)\"]\n  }\n}"
      },
      "done_reason": "stop",
      "done": true,
      "total_duration": 2920572042,
      "load_duration": 12529625,
      "prompt_eval_count": 330,
      "prompt_eval_duration": 920736375,
      "eval_count": 83,
      "eval_duration": 1986146583
    },
    "rawHeaders": {
      "content-length": "622",
      "content-type": "application/json; charset=utf-8",
      "date": "Fri, 06 Jun 2025 04:54:25 GMT"
    },
    "responseIsBinary": false
  }
]